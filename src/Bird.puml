@startuml

abstract class Bird {
    # name : String
    # color : String
    + speak() : void
    + fly() : void
}

class Pigeon {
    + eatPizza() : void
    + sleep() : void
}

Bird <|-- Pigeon

class Penguin {
    + speak() : void
    + fly() : void
}

Bird <|-- Penguin

class Parrot {
    + speak() : void
}

Bird <|-- Parrot

interface DanceImpl {
    + spin() : void
    + doTheCaterpillar() : void
    + jump() : void
}

Bird ..|> DanceImpl

@enduml